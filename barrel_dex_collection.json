{
	"info": {
		"_postman_id": "b53ed9d7-9405-47f4-aeb2-8a165394ed2f",
		"name": "barrel_dex_collection copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Datum and Schema",
			"item": [
				{
					"name": "Datum creation",
					"item": [
						{
							"name": "Create Date type Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d48ef5-0ebe-4304-9fa4-4db9ab8b5730",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"datetypedatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Date_Automation_{{$timestamp}}\",\n\t\"description\": \"Testdate\",\n\t\"definitionType\": \"date\",\n\t\"dateFormat\":\"YYYY-MM-DD\",\n    \"format\":\"date\",\n    \"examples\":\"2010-06-25\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "355764f4-38b2-46c0-aef5-aaadf304f536",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"datetypedatum\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"datetypedatum\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{datetypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{datetypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Email type string Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "702bd758-2d40-4238-9a08-19cdba7a280a",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"Emailtypedatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Email_Automation_{{$timestamp}}\",\n\t\"description\": \"Testemail\",\n\t\"definitionType\": \"string\",\n    \"length\":\"25\",\n    \"format\":\"email\",\n    \"examples\":\"test@gmail.com\", \n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4b5fd17-fcbe-454c-acc5-8fa6ae19ac62",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"Emailtypedatum\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"Emailtypedatum\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{Emailtypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{Emailtypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Integer type Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7014b637-2b69-40e8-bd6b-0d081e169a37",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"Integertypedatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "{{userId}}"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "{{clientId}}"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Integer_Automation_{{$timestamp}}\",\n\t\"description\": \"TestInteger\",\n\t\"definitionType\": \"integer\",\n    \"examples\":\"7,77,777\",\n    \"min\":0,\n    \"max\":100000,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "058120f7-fe5b-4c59-a624-a6cd1a5f727e",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"Integertypedatum\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"Integertypedatum\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{Integertypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{Integertypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Float type Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3496bad-5cdf-4610-949b-23fbf19cffc1",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"floattypedatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "{{userId}}"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "{{clientId}}"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Float_Automation_{{$timestamp}}\",\n\t\"description\": \"TestFloat\",\n\t\"definitionType\": \"float\",\n    \"examples\":\"44.56,777.65\",\n    \"min\":0,\n    \"max\":100000,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ff34bf9-8f5a-4d4f-8d0f-96abb584fb8c",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"floattypedatum\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"floattypedatum\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{floattypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{floattypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Boolean type Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b731ad9-dde3-4daf-8a60-236bb408da6d",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"Booleantypedatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "{{userId}}"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "{{clientId}}"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Boolean_Automation_{{$timestamp}}\",\n\t\"description\": \"TestBoolean\",\n\t\"definitionType\": \"boolean\",\n    \"examples\":\"Y,N\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd22912c-b6ef-4fb9-8a6a-e7e80502ba7a",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"Booleantypedatum\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"Booleantypedatum\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{Booleantypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{Booleantypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create string-Phone Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9032e4f1-b411-45a4-ab13-53f5e9c4b0b8",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"Phone-string\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "{{userId}}"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "{{clientId}}"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"String_Phone_{{$timestamp}}\",\n\t\"description\": \"String_Phone\",\n\t\"definitionType\": \"string\",\n\t\"examples\":\"user23\",\n    \"format\":\"regex\",\n    \"pattern\":\"(\\\\d{3})-(\\\\d{3})-(\\\\d{4})\",\n    \"length\":25,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								},
								"description": "Creates a new datum in DB"
							},
							"response": []
						},
						{
							"name": "Get Datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2618fe88-dbe7-40d4-9adb-8cf6f9d8921f",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"name\", bodyData.name);",
											"pm.environment.set(\"description\", bodyData.description);",
											"pm.environment.set(\"definitionType\", bodyData.definitionType);",
											"",
											"pm.test(\"datum definition id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.datumDefinitionId).equal(postman.getEnvironmentVariable(\"Phone-string\"));",
											"    console.log(res.datumDefinitionId);",
											"    console.log(postman.getEnvironmentVariable(\"Phone-string\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dat-definition/{{Phone-string}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dat-definition",
										"{{Phone-string}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create string datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f3d5253-ce1b-40a5-abfe-f729c00a07c4",
										"exec": [
											"bodyData=JSON.parse(responseBody)",
											"",
											"pm.environment.set(\"stringdatum\", bodyData);",
											"",
											"pm.test(\"datum id is generated\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).is.string (res);",
											"    console.log(res)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"stringdatum_{{$timestamp}}\",\n\t\"description\": \"stringdatum\",\n\t\"definitionType\": \"string\",\n\t\"examples\":\"user23\",\n    \"format\":\"regex\",\n    \"pattern\":\"[a-zA-Z0-9]\",\n    \"length\":25,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Schema creation",
					"item": [
						{
							"name": "Create Schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b85c7545-8f8a-4fd8-80b5-73eb4bcb2981",
										"exec": [
											"response =JSON.parse(responseBody)\r",
											"\r",
											"pm.environment.set(\"SchemaId\", response.schemaId);\r",
											"pm.environment.set(\"Version\", response.version);\r",
											"\r",
											"pm.test(\"SchemaId is generated\", function () {\r",
											"    \r",
											"    pm.expect(pm.response.text()).to.include(postman.getEnvironmentVariable(\"SchemaId\"));\r",
											"    console.log(postman.getEnvironmentVariable(\"SchemaId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9736fa70-c3ee-4eb7-8fd2-5582e3f04f6d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"schema_Automation_{{$timestamp}}\",\n\t\"datumIds\":[\n\t\t{\n\t\t\t\"datumId\":\"{{Integertypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffno\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{Integertypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffid\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{stringdatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffname\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{stringdatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffaddress\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{datetypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffbirthdate\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{Emailtypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffemail\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{stringdatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffgender\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{floattypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffsalary\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{Phone-string}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffphone\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{stringdatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffstate\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{floattypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"stafftaxrate\"\n\t\t},\n\t\t{\n\t\t\t\"datumId\":\"{{Phone-string}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffaltphone\"\n\t\t}\n\t\t],\n\t\t\"description\": \"schema_Automation\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get particular schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58e57ec7-991f-4a65-9234-ba2bbe81f013",
										"exec": [
											"response =JSON.parse(responseBody)",
											"pm.environment.set(\"SchemaName\", response.schema.name);",
											"",
											"pm.test(\"schema id matched\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.schema.id).equal(postman.getEnvironmentVariable(\"SchemaId\"));",
											"console.log(res.schema.id);",
											"console.log(postman.getEnvironmentVariable(\"SchemaId\"))",
											"});",
											"",
											"",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema-id/{{SchemaId}}:{{Version}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema-id",
										"{{SchemaId}}:{{Version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding new datum to schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "334b2c64-11ab-4755-866f-50942b298d47",
										"exec": [
											"response =JSON.parse(responseBody)",
											"pm.environment.set(\"version2\", response.version);",
											"",
											"pm.test(\"new datum id is added to schema\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.schemaId).equal(postman.getEnvironmentVariable(\"SchemaId\"));",
											"pm.expect(res.version).equal(postman.getEnvironmentVariable(\"version2\"));",
											"console.log(res.schemaId);",
											"console.log(postman.getEnvironmentVariable(\"SchemaId\"));",
											"console.log(res.version);",
											"console.log(postman.getEnvironmentVariable(\"version2\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{SchemaName}}\",\n\t\"schemaId\": \"{{SchemaId}}\",\n\t\"description\": \"test\",\n\t\"datumIds\":[\n\t\t{\n\t\t\t\"datumId\":\"{{Emailtypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"staffaltemail\"\n\t\t}],\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}\t\t"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get schema after edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0217ced6-f0a6-4f76-b2f6-a617bc6d626c",
										"exec": [
											"pm.test(\"new datum id and schema version are updated for the same schema sucessfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.schema.id).equal(postman.getEnvironmentVariable(\"SchemaId\"));",
											"pm.expect(res.version.version.versionNumber).equal(postman.getEnvironmentVariable(\"version2\"));",
											"console.log(res.schema.id);",
											"console.log(postman.getEnvironmentVariable(\"SchemaId\"));",
											"console.log(res.version.version.versionNumber);",
											"console.log(postman.getEnvironmentVariable(\"version2\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema-id/{{SchemaId}}:{{version2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema-id",
										"{{SchemaId}}:{{version2}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Duplicate datum name",
					"item": [
						{
							"name": "Duplicate datum name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6507a1c8-a538-4c9a-a270-0ff86c9d3f0b",
										"exec": [
											"pm.test(\"Duplicate Datum Name Found\", function(){",
											"    pm.expect(pm.response.text()).to.include(\"Duplicate datum found\");",
											"    console.log(pm.response.text());",
											"    ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"description\": \"{{description}}\",\n\t\"definitionType\": \"{{definitionType}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum-definition",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum-definition"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Active/inactive datum name",
					"item": [
						{
							"name": "De-activate datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8efad084-a602-4315-a5c3-6c0c0d51e545",
										"exec": [
											"pm.test(\"Datum is deactivated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).equal(pm.environment.get(\"Emailtypedatum\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isDeleted\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum/{{Emailtypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum",
										"{{Emailtypedatum}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search schema for inactive datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80ef4411-ca66-44bf-a874-d58de129083f",
										"exec": [
											"pm.test(\"Inactive datum is fetched successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res.schema.name).equal(pm.environment.get(\"SchemaName\"));",
											"console.log('Datum is deleted:',res.version.definitions[0].isDeleted);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema-id/{{SchemaId}}:{{version2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema-id",
										"{{SchemaId}}:{{version2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Re-activate datum",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd997284-f255-4c9d-8940-a151356078d8",
										"exec": [
											"pm.test(\"Datum is reactivated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    pm.expect(res).equal(pm.environment.get(\"Emailtypedatum\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isDeleted\":false\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/datum/{{Emailtypedatum}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"datum",
										"{{Emailtypedatum}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Duplicate schema name",
					"item": [
						{
							"name": "Duplicate schema name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3292394f-9fc9-47d9-ac92-6d76ed7c479b",
										"exec": [
											"pm.test(\"Duplicate schema found\", function(){",
											"    pm.expect(pm.response.text()).to.include(\"Duplicate schema found\");",
											"    console.log(pm.response.text());",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{SchemaName}}\",\n\t\"datumIds\":[\n\t\t{\n\t\t\t\"datumId\":\"{{Booleantypedatum}}\",\n\t\t\t\"isMandatory\":true,\n\t\t\t\"fieldName\":\"Test17\"\n\t\t}\n\t\t],\n\t\t\"description\": \"sample test1\",\n\t\t\"tags\": [\n\t\t{\n\t\t\t\"name\":\"test2\",\n\t\t\t\"value\":\"2\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"env2\",\n\t\t\t\"value\":\"qa\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/schema",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"schema"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dataset creation with valid data",
			"item": [
				{
					"name": "Dataset create with valid JSON file",
					"item": [
						{
							"name": "Create valid JSON Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9950805-115c-4563-bd42-a944cbaea3b1",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"",
											"pm.environment.set(\"ValidJSONid\", bodyData[0].info.datasetId);",
											"pm.environment.set(\"ValidJSONname\", bodyData[0].info.name);",
											" ",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"ValidJSONname\"),':Dataset is created successfully');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"sampledataset_json_{{$timestamp}}\",\n\t\"description\": \"sampledataset_json\",\n\t\"format\": \"json\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-JSON}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d2761cc-029a-4434-929b-0585468220fd",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"ValidJSONid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"ValidJSONname\"),':fetched successfully');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4fe76beb-de13-4b08-8979-524eb12ec18f",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a78632aa-cfe1-432d-b6eb-4e2ee287d2d8",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
											"console.log(res[0].info.name);",
											"console.log('Version:',postman.getEnvironmentVariable(\"Version\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{ValidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Passed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da6be97e-f765-4789-9106-99860d3f9d6c",
										"exec": [
											"",
											"pm.test(\"Dataset validation passed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"validated\", 'DatasetId: ' + postman.getEnvironmentVariable(\"ValidJSONid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b13904f9-5116-42f8-b400-60715709730a",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f9ad4a6-3fb7-47f4-bf54-6c0739f39e2f",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"ValidJSONname\"),':updated successfully');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{ValidJSONid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "984f634f-b8c0-4868-a119-6dc9a5d10efa",
										"exec": [
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is added successfully');",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{ValidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"env\",\n\t\"tagValue\":\"qa\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51626e2b-972f-428a-8cde-f2cd4d61bcea",
										"exec": [
											"",
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{ValidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with valid csv file",
					"item": [
						{
							"name": "Create valid CSV Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a52de19-4f0c-4043-98e7-f6a723eb2d26",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"ValidCSVid\", bodyData[0].info.datasetId);",
											"pm.environment.set(\"ValidCSVname\", bodyData[0].info.name);",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"sampledataset_csv_{{$timestamp}}\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-CSV}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8578d248-8dc2-4bde-9e92-fa2ea09482ea",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"ValidCSVid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "471e0e23-fd52-46de-a33e-402b9af51877",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidCSVid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidCSVid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8a9c1bb-e1bf-4094-ad7b-c6a5ec4767c8",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{ValidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Passed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "898c8777-1986-4745-b7a7-78d0d5f13726",
										"exec": [
											"",
											"pm.test(\"Dataset validation passed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"validated\", 'DatasetId: ' + postman.getEnvironmentVariable(\"ValidCSVid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f6c38703-4572-43d9-8c68-5082a0201e46",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43a7ba0a-386a-441f-a44f-3cb02bb2946d",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{ValidCSVid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "329b3795-df48-49a9-89c0-e88dce31d5a6",
										"exec": [
											"",
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\",'is added successfully'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{ValidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"env\",\n\t\"tagValue\":\"qa\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4781f45f-8004-43bf-b72c-33c3bf2f6d21",
										"exec": [
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{ValidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with valid txt file",
					"item": [
						{
							"name": "Create valid txt Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f90ac1f-dbb4-4772-99bb-a7ce6d1056ac",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"Validtxtname\", bodyData[0].info.name);",
											"pm.environment.set(\"Validtxtid\", bodyData[0].info.datasetId);",
											"",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"sampledataset_txt_{{$timestamp}}\",\n\t\"description\": \"sampledataset_txt\",\n\t\"format\": \"txt\",\n\t\"delimiter\": \";\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-TXT}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62a8800e-053a-4464-acec-8ab2582c627c",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Validtxtid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e0a85af-5c2f-427c-b98c-46cd923ec601",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Validtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Validtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1527e94-7dc5-4e27-8b09-dd810ca143ae",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Validtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Passed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3446e6d-30e5-45c0-8f58-3989506030ab",
										"exec": [
											"",
											"pm.test(\"Dataset validation passed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"validated\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Validtxtid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f46892c8-72fb-4375-87a8-48e292810bf3",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d2a5abf-3183-461a-9d26-8c35771024e4",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{Validtxtid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "045d5f12-8612-4dd2-b325-c7e4cf964b9f",
										"exec": [
											"pm.test(\"Tag added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),'is added successfully');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{Validtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"sampletesting2\",\n\t\"tagValue\":\"data\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dbfae7b-ee61-45ee-8a9d-f13d0cb32e5e",
										"exec": [
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{Validtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with valid xml file",
					"item": [
						{
							"name": "Create valid xml Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb0fa81b-7724-4933-90eb-34330f544a6a",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"Validxmlname\", bodyData[0].info.name);",
											"pm.environment.set(\"Validxmlid\", bodyData[0].info.datasetId);",
											"",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"sampledataset_xml_{{$timestamp}}\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-XML}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59462252-d5c8-41d2-be43-e9e921d70b8c",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Validxmlid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "441a32c3-1cf6-4611-8cc8-899b5e528a20",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Validxmlid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Validxmlid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c44daa7-4e73-4566-a4be-e548aba79100",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Validxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Passed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02333c14-0492-4810-9ea6-e7291650d13c",
										"exec": [
											"",
											"pm.test(\"Dataset validation passed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"validated\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Validxmlid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4795da34-5e3d-4fb1-a974-73475b555e23",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{ValidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7eefbda-517f-40ae-8e6b-d00992d967fb",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{Validxmlid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "165b9594-5eb9-4993-b622-025269d828ae",
										"exec": [
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{Validxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"sampletesting3\",\n\t\"tagValue\":\"data\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1e60a31-adc1-44ce-900e-e2e89bfcef66",
										"exec": [
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{Validxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dataset creation with Invalid data",
			"item": [
				{
					"name": "Dataset create with Invalid txt file",
					"item": [
						{
							"name": "Create Invalid TXT Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f13fe98a-4b1e-49b5-843f-5c9418288c65",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"Invalidtxtname\", bodyData[0].info.name);",
											"pm.environment.set(\"Invalidtxtid\", bodyData[0].info.datasetId);",
											"",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"InvalidDataset-txt_{{$timestamp}}\",\n\t\"description\": \"Errors-txt\",\n\t\"format\": \"txt\",\n\t\"delimiter\": \";\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-ErrorsTXT}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true,\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07bcc954-e497-4714-a315-a2ac51a9cee8",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Invalidtxtid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "88aef431-36b0-481a-9ae2-3fc9d4ff930a",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1c285c2-e904-4bb2-b22c-a5f1ce316760",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Invalidtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Failed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "115edb8d-fca4-4a14-90bb-9e6a8224f826",
										"exec": [
											"",
											"pm.test(\"Dataset validation failed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"failed\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Invalidtxtid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9fa60b16-3874-418e-b232-63285a02dae5",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07ab1413-d646-401f-99c1-d72dc4fa7824",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidtxtname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{Invalidtxtid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f75c9f8f-2fc5-4c75-9752-455506e858ea",
										"exec": [
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\",'is added successfully'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{Invalidtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"sampletesting6\",\n\t\"tagValue\":\"data\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d687115-2e2f-4270-a86a-fef87e957fca",
										"exec": [
											"",
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{Invalidtxtid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with Invalid csv file",
					"item": [
						{
							"name": "Create Invalid CSV Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4668af4b-6107-44a5-a4d2-45800f1b56c4",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"InvalidCSVid\", bodyData[0].info.datasetId);",
											" pm.environment.set(\"InvalidCSVname\", bodyData[0].info.name);",
											" ",
											"pm.test(\"Body matches dataset name\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"InvalidDataset-csv_{{$timestamp}}\",\n\t\"description\": \"InvalidDataset-csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 1,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-ErrorsCSV}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9fb50d0-cdc3-4067-b083-60b4d37386ca",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"InvalidCSVid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f468ac7e-f94c-43ec-8875-a8d653fc8e0a",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{InvalidCSVid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{InvalidCSVid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "201e86d5-c582-4393-84b8-88f5d2c2904d",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{InvalidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Failed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d83f8f-63ae-40a9-8d97-6d957495f735",
										"exec": [
											"",
											"pm.test(\"Dataset validation failed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"failed\", 'DatasetId: ' + postman.getEnvironmentVariable(\"InvalidCSVid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "31c0676b-b664-4ec2-90c1-d0417b373a06",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40cad178-3e3b-4f47-a6b6-2bbe7f8f0e64",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidCSVname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{InvalidCSVid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9057cc52-1cf1-4392-9ca3-a84fd60d364f",
										"exec": [
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{InvalidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"env\",\n\t\"tagValue\":\"qa\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d03a0ec4-a33d-4e09-9d9a-5f602e13ae01",
										"exec": [
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{InvalidCSVid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with Invalid xml file",
					"item": [
						{
							"name": "Create Invalid XML Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2212b08e-9a13-41f8-864e-8b7bdeac58cb",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"Invalidxmlname\", bodyData[0].info.name);",
											"pm.environment.set(\"Invalidxmlid\", bodyData[0].info.datasetId);",
											"",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"InvalidDataset-xml_{{$timestamp}}\",\n\t\"description\": \"Errors-xml\",\n\t\"format\": \"xml\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"xmlPath\":\"Employer/Employee\",\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-ErrorsXML}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d408d5c-bfbf-49ab-b22b-f26d662c7826",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Invalidxmlid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "625c8f0d-b521-4f37-b435-ba67c38827ac",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidxmlid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidxmlid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4cf39561-96e1-4f71-be47-f286112d208d",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Invalidxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Failed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a150bb0-2ec4-4681-a7ca-55a4fc858d4b",
										"exec": [
											"",
											"pm.test(\"Dataset validation failed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"failed\", 'DatasetId: ' + postman.getEnvironmentVariable(\"Invalidxmlid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad8fb3ea-ec69-4beb-bbab-d68dcf4f96c8",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90b14137-ad81-4943-9abb-962e79273b2d",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"Invalidxmlname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{Invalidxmlid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c06cd98-62df-41ec-9191-275629285b92",
										"exec": [
											"",
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{Invalidxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"sampletesting8\",\n\t\"tagValue\":\"data\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4f2bc04-7d79-4620-82b2-b38886dc8757",
										"exec": [
											"",
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{Invalidxmlid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dataset create with Invalid JSON file",
					"item": [
						{
							"name": "Create Invalid JSON Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7caf991-589b-4dcf-947a-ba3b5e136c47",
										"exec": [
											"bodyData=JSON.parse(responseBody);",
											"",
											"",
											"pm.environment.set(\"InvalidJSONid\", bodyData[0].info.datasetId);",
											"pm.environment.set(\"InvalidJSONname\", bodyData[0].info.name);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"   ",
											"pm.test(\"Body matches dataset name\", function () {",
											"bodyData=JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"InvalidDataset-JSON_{{$timestamp}}\",\n\t\"description\": \"InvalidDataset-JSON\",\n\t\"format\": \"json\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-ErrorsJSON}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get dataset by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2517c20-58de-44ef-9c23-b917804d2034",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"InvalidJSONid\"));",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2f571a02-6d5c-459e-873b-f9d907fa9b2e",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{InvalidJSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{InvalidJSONid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate schema with version to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b6fd703-2cec-45ee-8b07-4a5b801ae7c7",
										"exec": [
											"",
											"pm.test(\"Associated schema with version to dataset\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{InvalidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "To check Dataset validation has Failed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58d8328d-1814-469e-a1ce-4a15164d5bd2",
										"exec": [
											"",
											"pm.test(\"Dataset validation failed\", function () {",
											"    var res=pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"failed\", 'DatasetId: ' + postman.getEnvironmentVariable(\"InvalidJSONid\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4285eeff-9110-4426-ac0e-2d2b055455e9",
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Invalidtxtid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{Invalidtxtid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e6fd426-e27f-40d4-a6a4-44ada87c3d0c",
										"exec": [
											"",
											"pm.test(\"Dataset updated successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(res.info.name).equal(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"console.log(res.info.name);",
											"console.log(postman.getEnvironmentVariable(\"InvalidJSONname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetId\":\"{{InvalidJSONid}}\",\n\t\"description\":\"testingdata2\",\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\",\n\t\t\t\"partnerName\": \"Paycom\"\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/update",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add tag to dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7159272a-611f-4221-9140-6857de48125f",
										"exec": [
											"",
											"pm.test(\"Tag is added to dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"pm.environment.set(\"Tagname\", res[0].tags[1].name);    ",
											"pm.expect(res[0].tags[1].name).equal(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].tags[1].name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"addTag\",\n\t\"datasetId\":\"{{InvalidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"env\",\n\t\"tagValue\":\"qa\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove tag from dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74294720-bd61-4694-9624-3bc953e96064",
										"exec": [
											"",
											"pm.test(\"Tag removed from dataset successfully\", function(){",
											"    var res=JSON.parse(responseBody);",
											"    ",
											"pm.expect(pm.response.text()).to.not.include(postman.getEnvironmentVariable(\"Tagname\"));",
											"console.log(res[0].info.name);",
											"console.log(postman.getEnvironmentVariable(\"Tagname\"),':is removed');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jsonType\":\"removeTag\",\n\t\"datasetId\":\"{{InvalidJSONid}}\",\n\t\"clientId\":\"{{clientId}}\",\n\t\"tagName\":\"{{Tagname}}\",\n\t\"createdBy\":\"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/events",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Associating schema while creating dataset",
					"item": [
						{
							"name": "Associating schema while creating dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9110f178-33b8-4420-bc28-1ce33a09dc1b",
										"exec": [
											"bodyData = JSON.parse(responseBody);",
											"",
											"",
											"pm.environment.set(\"JSONid\", bodyData[0].info.datasetId);",
											"pm.environment.set(\"JSONname\", bodyData[0].info.name);",
											"",
											"pm.test(\"Dataset is created successfully\", function () {",
											"    bodyData = JSON.parse(responseBody);",
											"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"JSONname\"));",
											"    console.log(bodyData[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"JSONname\"), ':Dataset is created successfully');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-spr-user-id",
										"type": "text",
										"value": "{{userId}}"
									},
									{
										"key": "x-spr-client-id",
										"type": "text",
										"value": "{{clientId}}"
									},
									{
										"key": "x-spr-trace-id",
										"type": "text",
										"value": "{{traceId}}"
									},
									{
										"key": "x-spr-hc-parent-id",
										"type": "text",
										"value": "{{hcParentId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Schema_associated_while_dataset_creation_{{$timestamp}}\",\n\t\"description\": \"Schema associated while dataset creation\",\n\t\"format\": \"json\",\n\t\"fileType\": \"full-file\",\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"{{keyname-JSON}}\",\n\t\t\"s3BucketName\": \"{{bucket}}\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"RunType\",\n\t\t\t\"value\":\"Automation\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"spr:dex:tag::partnerId\",\n\t\t\t\"value\":\"spr:partner::5bcb5bd3-6b0c-4712-bee3-b291723d926e\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"partnerName\",\n\t\t\t\"value\":\"Paycom\"\n\t\t}\n\t\t],\n\t\"isActive\":true\n}"
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "To check dataset is standardized and validation passed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73dcef33-2126-4ea8-9138-5c19ecd67ca2",
										"exec": [
											"",
											"pm.test(\"Dataset name matched and is standardized\", function () {",
											"    var res = JSON.parse(responseBody);",
											"",
											"    pm.expect(res[0].datasetStatus).equal(\"standardized\", 'DatasetId: ' + postman.getEnvironmentVariable(\"JSONid\"));",
											"    pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"JSONname\"));",
											"    console.log(res[0].info.name);",
											"    console.log(postman.getEnvironmentVariable(\"JSONname\"), ':fetched successfully');",
											"});",
											"",
											"pm.test(\"Dataset validation passed\", function () {",
											"    var res = pm.response.json();",
											"    pm.expect(res[0].validationResult.validationStatus).equal(\"validated\", 'DatasetId: ' + postman.getEnvironmentVariable(\"JSONid\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2fe28706-7ac2-4dc3-b97b-003c395d7503",
										"exec": [
											"setTimeout(function () { }, [40000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-spr-user-id",
										"value": "{{userId}}",
										"type": "text"
									},
									{
										"key": "x-spr-client-id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "x-spr-trace-id",
										"value": "{{traceId}}",
										"type": "text"
									},
									{
										"key": "x-spr-hc-parent-id",
										"value": "{{hcParentId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{JSONid}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"datasets",
										"api",
										"v1",
										"dataset",
										"ids"
									],
									"query": [
										{
											"key": "id",
											"value": "{{JSONid}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add multiple files concurrently",
			"item": [
				{
					"name": "Create valid JSON Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e45856cb-1acc-4a6e-861a-e6fe244deb27",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"",
									"pm.environment.set(\"ValidJSONid\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidJSONname\", bodyData[0].info.name);",
									" ",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidJSONname\"),':Dataset is created successfully');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_json\",\n\t\"description\": \"sampledataset_json\",\n\t\"format\": \"json\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-JSON.json\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid CSV Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b3dc9dc-faa8-4a90-8c92-8ea61bca5216",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid txt Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cd4773a-619c-43e5-a350-2379586acbd8",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validtxtname\", bodyData[0].info.name);",
									"pm.environment.set(\"Validtxtid\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_txt\",\n\t\"description\": \"sampledataset_txt\",\n\t\"format\": \"txt\",\n\t\"delimiter\": \";\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-txt.txt\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65ee60fa-f520-4985-9ab9-0c5151eecc2c",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dataset by ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb2df71e-045e-431e-9032-745ea4f92800",
								"exec": [
									"",
									"pm.test(\"Dataset name matched and is standardized\", function(){",
									"    var res=JSON.parse(responseBody);",
									"",
									"pm.expect(res[0].datasetStatus).equal(\"standardized\");",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"ValidJSONname\"),':fetched successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cd515db6-4d94-4c8d-9b06-9332a0de1499",
								"exec": [
									"setTimeout(function(){}, [7000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidJSONid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								"ids"
							],
							"query": [
								{
									"key": "id",
									"value": "{{ValidJSONid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dataset by ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d66fda57-98e8-4bbf-a40a-8dc4a085c223",
								"exec": [
									"",
									"pm.test(\"Dataset name matched and is standardized\", function(){",
									"    var res=JSON.parse(responseBody);",
									"",
									"pm.expect(res[0].datasetStatus).equal(\"standardized\");    ",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"});",
									"",
									"setTimeout(function(){}, [15000]);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "78f0de4e-aafa-4e38-9dd7-a3daceebff90",
								"exec": [
									"setTimeout(function(){}, [7000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{ValidCSVid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								"ids"
							],
							"query": [
								{
									"key": "id",
									"value": "{{ValidCSVid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dataset by ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "416a873a-4bba-47a8-9353-fd925ff598b8",
								"exec": [
									"",
									"pm.test(\"Dataset name matched and is standardized\", function(){",
									"    var res=JSON.parse(responseBody);",
									"",
									"pm.expect(res[0].datasetStatus).equal(\"standardized\");",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"});",
									"",
									"setTimeout(function(){}, [15000]);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c3ddc122-6536-40fd-ba18-9bb37e7a3def",
								"exec": [
									"setTimeout(function(){}, [7000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Validtxtid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								"ids"
							],
							"query": [
								{
									"key": "id",
									"value": "{{Validtxtid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dataset by ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "971b139c-9d4b-4ee7-a761-311e32b5fda5",
								"exec": [
									"",
									"pm.test(\"Dataset name matched and is standardized\", function(){",
									"    var res=JSON.parse(responseBody);",
									"",
									"pm.expect(res[0].datasetStatus).equal(\"standardized\");    ",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"});",
									"",
									"setTimeout(function(){}, [15000]);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f8213b56-5a3d-4937-9f85-3f063a0a904d",
								"exec": [
									"setTimeout(function(){}, [7000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/ids?id={{Validxmlid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								"ids"
							],
							"query": [
								{
									"key": "id",
									"value": "{{Validxmlid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate schema with version to dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34af8532-6019-4aa3-8b62-6e81b3824a36",
								"exec": [
									"",
									"pm.test(\"Associated schema with version to dataset\", function(){",
									"    var res=JSON.parse(responseBody);",
									"",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidJSONname\"));",
									"console.log(res[0].info.name);",
									"console.log('Version:',postman.getEnvironmentVariable(\"Version\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{ValidJSONid}}\",\n\t\"clientId\":\"spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16\"\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate schema with version to dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fca41f23-05fa-49cd-8866-86cf992e0751",
								"exec": [
									"",
									"pm.test(\"Associated schema with version to dataset\", function(){",
									"    var res=JSON.parse(responseBody);",
									"    ",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{ValidCSVid}}\",\n\t\"clientId\":\"spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16\"\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate schema with version to dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0b7e6a6-abac-4592-afbf-7094d9110fbb",
								"exec": [
									"",
									"pm.test(\"Associated schema with version to dataset\", function(){",
									"    var res=JSON.parse(responseBody);",
									"    ",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"Validtxtname\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Validtxtid}}\",\n\t\"clientId\":\"spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16\"\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate schema with version to dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a275114a-0d90-4c09-b061-e6b117edeecb",
								"exec": [
									"",
									"pm.test(\"Associated schema with version to dataset\", function(){",
									"    var res=JSON.parse(responseBody);",
									"    ",
									"pm.expect(res[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"console.log(res[0].info.name);",
									"console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonType\":\"defineSchema\",\n\t\"datasetId\":\"{{Validxmlid}}\",\n\t\"clientId\":\"spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77\",\n\t\"schemaId\":\"{{SchemaId}}:{{Version}}\",\n\t\"createdBy\":\"spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16\"\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"events"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add multiple file types concurrently",
			"item": [
				{
					"name": "Create valid CSV Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "156789a9-5df4-4551-8243-454ddb40ed2e",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid CSV Dataset2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed05483f-2b8b-4d7d-894d-b5a1186115ba",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid2\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname2\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname2\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname2\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv2\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid CSV Dataset3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a121131-cfe5-4f09-aa53-e05efed4495b",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid3\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname3\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname3\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname3\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv3\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid CSV Dataset4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27dd1697-f14a-4bc5-b145-5e683247f8d5",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid4\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname4\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname4\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname4\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv4\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid CSV Dataset5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74dbb753-8e34-4577-8285-6aa6f7ca802d",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ValidCSVid5\", bodyData[0].info.datasetId);",
									"pm.environment.set(\"ValidCSVname5\", bodyData[0].info.name);",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"ValidCSVname5\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"ValidCSVname5\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_csv5\",\n\t\"description\": \"sampledataset_csv\",\n\t\"format\": \"csv\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/valid-CSV.csv\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\"tags\":[\n\t\t{\n\t\t\t\"name\":\"variable\",\n\t\t\t\"value\":\"def123\"\n\t\t}\n\t\t],\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8cf7b9b-646f-41f5-aa50-718a2d34897a",
								"exec": [
									"bodyData=JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"bodyData=JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6650db8c-6924-4370-8cab-469e77488ef7",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname2\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid2\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname2\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname2\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml2\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0208ed07-c1eb-4c99-9d7f-fa010230d4e8",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname3\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid3\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname3\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname3\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml3\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e44cc6d7-ae80-459b-9c09-ccd0f4c36734",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname4\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid4\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname4\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname4\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml4\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid xml Dataset5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9156f40-962e-4055-8a0a-74929f34a65c",
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"Validxmlname5\", bodyData[0].info.name);",
									"pm.environment.set(\"Validxmlid5\", bodyData[0].info.datasetId);",
									"",
									"",
									"pm.test(\"Dataset is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData[0].info.name).equal(postman.getEnvironmentVariable(\"Validxmlname5\"));",
									"    console.log(bodyData[0].info.name);",
									"    console.log(postman.getEnvironmentVariable(\"Validxmlname5\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::0108f9ee-bb6a-4ad4-8869-67974f33cc16",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::2c272194-89fc-45fb-9e64-9391b4a8bd77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"sampledataset_xml5\",\n\t\"description\": \"sampledataset_xml\",\n\t\"format\": \"xml\",\n\t\"xmlPath\": \"Employer/Employee\",\n\t\"fileType\": \"full-file\",\n\t\"numOfHeaderRows\": 0,\n\t\"numOfTrailerRows\": 0,\n\t\"datasetType\":\"user-uploaded\",\n\t\"s3Urls\": [{\n\t\t\"s3KeyName\": \"test/validxml.xml\",\n\t\t\"s3BucketName\": \"spr-barrel-dev-datasets\"\n\t}],\n\t\"sources\":{},\n\t\n\t\"columnMappingPolicy\":\"name-based\",\n\t\"isActive\":true\n}"
						},
						"url": {
							"raw": "{{URL}}/datasets/api/v1/dataset/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"datasets",
								"api",
								"v1",
								"dataset",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Workflow",
			"item": [
				{
					"name": "Define Pipeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec0d79da-2973-4c5d-8207-30f412a36da8",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8f52ea2-12bb-40e9-aafc-33db5d2a39ce",
								"exec": [
									"pm.test(\"New version of workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"NewVersion\", bodyData.info.versionNumber);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName\"));",
									"    pm.expect(bodyData.info.versionNumber).equal(postman.getEnvironmentVariable(\"versionNumber2\"));",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName\"), ':New version of workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"{{workflowName}}\",\n\t\"versionNumber\":2,\n\t\"baseVersionNumber\":1\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/new-version",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"new-version"
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName}}\",\n    \"versionNumber\": {{versionNumber}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "remove step",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName}}\",\n\t\"versionNumber\": {{versionNumber}},\n\t\"stepName\":\"columnMapper\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/remove-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"remove-step"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb9f7275-c24f-4c07-b727-4613789cc857",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName}}\",\n\t\"versionNumber\": {{versionNumber}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "get pipeline details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/{{WorkflowId}}:{{versionNumber}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"{{WorkflowId}}:{{versionNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Multiple workflows",
			"item": [
				{
					"name": "Define Pipeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67b26c85-8788-4c8f-926f-f869aab50d85",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName2\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId2\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName2\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName2\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "Define Pipeline2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b87b80e-1f7c-4353-aebd-ca1ce761a574",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName2\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber2\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId2\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName2\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName2\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "Define Pipeline3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c64687cb-20de-4790-9c3e-cd3d214c8509",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName3\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber3\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId3\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName3\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName3\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "Define Pipeline4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23ca3ac5-c488-4bf6-8a42-100f5fcc8d7c",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName4\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber4\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId4\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName4\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName4\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "Define Pipeline5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2773a4e-1ea8-4d5a-8e21-45ec34929925",
								"exec": [
									"pm.test(\"Workflow is created successfully\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.environment.set(\"workflowName5\", bodyData.info.code);",
									"    pm.environment.set(\"versionNumber5\", bodyData.info.versionNumber);",
									"    pm.environment.set(\"WorkflowId5\", bodyData.pipelineId);",
									"    pm.expect(bodyData.info.code).equal(postman.getEnvironmentVariable(\"workflowName5\"));",
									"    console.log(bodyData.info.code);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName5\"), ':Workflow is created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\":\"Test5workflow_{{$timestamp}}\",\n\t\"pipelineType\":\"ingestion\",\n\t\"displayName\":\"Test5workflow_{{$timestamp}}\",\n\t\"description\":\"Testworkflow\"\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/define",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"define"
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName}}\",\n    \"versionNumber\": {{versionNumber}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName2}}\",\n    \"versionNumber\": {{versionNumber2}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName3}}\",\n    \"versionNumber\": {{versionNumber3}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName4}}\",\n    \"versionNumber\": {{versionNumber4}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "set step - Column mapper - Barrel Qa 5",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-spr-user-id",
								"type": "text",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb"
							},
							{
								"key": "x-spr-client-id",
								"type": "text",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipelineCode\": \"{{workflowName5}}\",\n    \"versionNumber\": {{versionNumber5}},\n    \"steps\": [\n    \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n        {\n            \"inputs\": {\n                \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                \"columnDictionary\": {\n                    \"staffgender\": \"staffgender\",\n                    \"staffid\": \"staffid\",\n                    \"staffemail\": \"staffemail\",\n                    \"staffname\": \"staffname\",\n                    \"staffsalary\": \"staffsalary\",\n                    \"staffstate\": \"staffstate\",\n                    \"staffno\": \"staffno\",\n                    \"staffaddress\": \"staffaddress\",\n                    \"staffbirthdate\": \"staffbirthdate\",\n                    \"staffaltemail\": \"staffaltemail\",\n                    \"stafftaxrate\": \"stafftaxrate\",\n                    \"staffphone\":\"staffphone\",\n                    \"staffaltphone\":\"staffaltphone\"\n                },\n                \"sourceSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                },\n                \"destinationSchemaParts\": {\n                    \"id\": \"{{schemaId}}\",\n                    \"version\": \"{{Version}}\"\n                }\n            },\n            \"name\": \"columnMapper\",\n            \"stepIndex\": 0,\n            \"stepType\": \"columnMapper\",\n            \"displayName\": \"columnMapper\"\n        },\n        {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n    ]\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/set-step",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"set-step"
							],
							"query": [
								{
									"key": "content-type",
									"value": "appl",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79af4318-df32-4460-ae19-3b8a3009d304",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName}}\",\n\t\"versionNumber\": {{versionNumber}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3bccdfe-b0d5-49f3-bc30-1a8ce0b1a372",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName2\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName2}}\",\n\t\"versionNumber\": {{versionNumber2}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c66d4176-9497-42c9-859e-7d1c44fae6c7",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName3\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName3}}\",\n\t\"versionNumber\": {{versionNumber3}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d726840-b94b-4671-92bf-2302f06e8f06",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName4\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName4}}\",\n\t\"versionNumber\": {{versionNumber4}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish pipeline5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75a0e42f-d1d9-4415-bf2b-86fa79e48061",
								"exec": [
									"pm.test(\"Workflow is published\", function () {",
									"    bodyData = JSON.parse(responseBody);",
									"    pm.expect(bodyData.isPublished).equal(\"true\");",
									"    console.log(bodyData.info.name);",
									"    console.log(postman.getEnvironmentVariable(\"workflowName5\"), ':Workflow is published successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::a3e4733c-a280-4187-bffc-9585dc691bbb",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:clt::e2b03e7f-afc6-4582-94fb-e483167a3773",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pipelineCode\": \"{{workflowName5}}\",\n\t\"versionNumber\": {{versionNumber5}}\n}"
						},
						"url": {
							"raw": "{{URL}}/pipelines/api/v1/pipeline/publish",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pipelines",
								"api",
								"v1",
								"pipeline",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute5",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-spr-client-id",
								"value": "spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775",
								"type": "text"
							},
							{
								"key": "x-spr-trace-id",
								"value": "27a7af71-b256-4abc-8329-acdeb5a01b34",
								"type": "text"
							},
							{
								"key": "x-spr-user-id",
								"value": "spr:user::630dacde-576e-4752-a2c2-f1c9793c641e",
								"type": "text"
							},
							{
								"key": "x-spr-hc-parent-id",
								"value": "388a79eb-a495-449d-96fc-a3acaf959807",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dag_info\": {\n        \"email\": [\n            null\n        ],\n        \"email_on_failure\": false,\n        \"email_on_retry\": false,\n        \"end_date\": \"0\",\n        \"owner\": \"undefined undefined\",\n        \"retries\": 0,\n        \"schedule_interval\": \"once\",\n        \"soft_fail\": true,\n        \"start_date\": \"0\"\n    },\n    \"definition\": {\n        \"info\": {\n            \"code\": \"{{workflowName}}\",\n            \"displayName\": \"{{workflowName}}\",\n            \"pipelineType\": \"ingestion\",\n            \"versionNumber\": 2,\n            \"description\": \"Testworkflow\"\n        },\n        \"pipelineId\": \"{{workflowName}}:{{versionNumber}}\",\n        \"inputs\": {\n            \"inputs\": [\n                {\n                    \"name\": \"dataset\",\n                    \"type\": \"Dataset\"\n                }\n            ]\n        },\n        \"allSteps\": [\n        \t{\n\t\t\t\"displayName\": \"schemaVerification\",\n\t\t\t\"name\": \"schemaVerification\",\n\t\t\t\"stepType\": \"schemaVerification\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\"\n\t\t\t}\n\t\t},\n            {\n                \"displayName\": \"columnMapper\",\n                \"name\": \"columnMapper\",\n                \"stepType\": \"columnMapper\",\n                \"stepVersionNumber\": 0,\n                \"stepIndex\": 0,\n                \"inputs\": {\n                    \"sourceSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"sourceDataset\": \"$$pipelineInputs.dataset\",\n                    \"destinationSchema\": \"{{schemaId}}:{{Version}}\",\n                    \"columnDictionary\": {\n                        \"staffgender\": \"staffgender\",\n                        \"staffid\": \"staffid\",\n                        \"staffphone\": \"staffphone\",\n                        \"staffemail\": \"staffemail\",\n                        \"staffname\": \"staffname\",\n                        \"staffsalary\": \"staffsalary\",\n                        \"staffstate\": \"staffstate\",\n                        \"staffno\": \"staffno\",\n                        \"staffaddress\": \"staffaddress\",\n                        \"staffbirthdate\": \"staffbirthdate\",\n                        \"staffaltphone\": \"staffaltphone\",\n                        \"staffaltemail\": \"staffaltemail\",\n                        \"stafftaxrate\": \"stafftaxrate\"\n                    },\n                    \"sourceSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    },\n                    \"destinationSchemaParts\": {\n                        \"id\": \"{{schemaId}}\",\n                        \"version\": \"{{Version}}\"\n                    }\n                }\n            },\n            {\n\t\t\t\"displayName\": \"exportData\",\n\t\t\t\"name\": \"exportData\",\n\t\t\t\"stepType\": \"exportData\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"format\": \"json\",\n\t\t\t\t\"hostname\": \"barrel-sftp.spraoi-sandbox.dev\",\n\t\t\t\t\"username\": \"sftp-demo-qa\",\n\t\t\t\t\"s3BucketName\": \"none\",\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"mode\": \"sftp\",\n\t\t\t\t\"s3Path\": \"none\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"displayName\": \"publishToSqs\",\n\t\t\t\"name\": \"publishToSqs\",\n\t\t\t\"stepType\": \"publishToSqs\",\n\t\t\t\"stepIndex\": 1,\n\t\t\t\"inputs\": {\n\t\t\t\t\"dataset\": \"$$pipelineInputs.dataset\",\n\t\t\t\t\"publishUrl\": \"https://sqs.us-east-1.amazonaws.com/111124628564/data-persistence-cmd-queue-dev\"\n\t\t\t}\n\t\t}\n        ],\n        \"lastUpdated\": 1591034731936,\n        \"tags\": [],\n        \"isPublished\": true,\n        \"maxVersionNumber\": 22,\n        \"copiedFrom\": null,\n        \"schedule\": null\n    },\n    \"pipelineInputs\": {\n        \"dataset\": \"{{Datasetid}}\",\n        \"clientId\": \"spr:bz:clt::a2b03e7f-afc6-4582-94fb-e483167a3775\",\n        \"pipelineId\": \"{{WorkflowId}}\",\n        \"userId\": \"spr:user::630dacde-576e-4752-a2c2-f1c9793c641e\"\n    }\n}"
						},
						"url": {
							"raw": "{{URL}}/airflow/dag-gen/api/v1/dag",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airflow",
								"dag-gen",
								"api",
								"v1",
								"dag"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}